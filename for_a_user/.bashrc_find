search() {

    # Run a 'find "<TOP_DIR>" -name "<FILE>" -exec grep -IH "<REG_EXP>" {} \;'
    # command, which helps finding text files containing lines that match a
    # regular expression.
    #
    # FILE defaults to "*".
    #
    # TOP_DIR defaults to the current directory.
    #
    # Wild cards characters are allowed in FILE (e.g; "*.c").
    #
    # USAGE:
    #
    #     search REG_EXP FILE [TOP_DIR]
    #
    # EXAMPLES:
    #
    #     search "my_function(" "*.c"
    #
    #     search "my_function(" "*.c" my_source_tree_root

    local SEARCHTOP=.;
    local FILE="*";

    [ $# -lt 1 ] \
        && echo "Regular expression expected as first argument">&2 && return 1;

    [ $# -gt 1 ] && FILE="$2";
    [ $# -gt 2 ] && SEARCHTOP="$3";

    find "$SEARCHTOP" -type f -name "$FILE" -exec grep -IH "$1" {} \;

}

check_display_width() {

    # Loop over text files in the current directory and subdirectories and list
    # those having a display width larger than 79 characters (i.e. those having
    # at least one line longer than 79 characters).
    #
    # Note that the display width is determined using the wc command with
    # option -L, which expands tabs to 8 characters. This may causes unexpected
    # results for users which uses a different tab setup in their text editor.
    #
    # The 79 value can be substituted with another one. Just provide the value
    # as argument to the function.
    #
    # USAGE:
    #
    #     check_display_width [DISPLAY_WIDTH]

    local W=${1:-79};

    find . -print0 | while IFS= read -r -d $'\0' FN; do
        if [ $(file -b --mime "$FN"|grep -c "\<text\>") -gt 0 ]; then
            if [ $(wc -L "$FN"|sed "s/ .\+$//") -gt $W ]; then
                echo "$FN";
            fi
        fi
    done
}

find_by_modif_date() {

    # Run a find command, with instructions added so that the resulting file
    # list is displayed sorted by modification date (most recent last) and
    # prefixed with modification date and time.
    #
    # USAGE:
    #
    #     find_by_modif_date [FIND_COMMAND_OPTIONS]
    #
    # EXAMPLES:
    #
    #     find_by_modif_date . -name "*.c"
    #
    #     find_by_modif_date . -type f

    find $@ -exec stat --format '%Y :%y %n' "{}" \; | sort -n | cut -d: -f2-;

}
